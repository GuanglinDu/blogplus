<h2>Post:</h2>
<p>
  <strong>Title: </strong><%= @post.title %><br />
  <strong>Text: </strong><%= @post.text %><br />
</p>

<!-- Show the comments using partial _comment.html.erb --> 
<h3>Comments:</h3>

<!-- Pagination: see https://github.com/bootstrap-ruby/will_paginate-bootstrap -->
<%= page_entries_info @comments %><br />
<%= will_paginate @comments, renderer: BootstrapPagination::Rails %>

<!-- Index display: http://stackoverflow.com/questions/4566620/getting-the-current-item-number-or-index-when-using-will-paginate-in-rails-app -->
<%# count = @comments.total_entries - @comments.offset %>
<% count = @comments.offset %>

<table class="table">
  <thead>
  <tr>
    <th>No.</th>
    <th>Commenter</th>
    <th>Comment</th>
    <!-- Show, Edit & Destroy -->
    <th></th>
    <th></th>
    <th></th>
  </tr>
  </thead>
  <!-- 
    RailsGuides: As the render method iterates over the @post.comments collection,
    it assigns each comment to a local variable named the same as the partial,
    in this case comment which is then available in the partial for us to show.
  -->
  <!-- Comment count. Either will do. -->
  <!-- render partial: "comments/comment", collection: @post.comments -->
  <tbody>
    <%# = render @post.comments: mem killer! %>
    <!-- Passes an arg to the partial. See http://www.jakobbeyer.de/optional-local-variables-in-ror -->
    <%= render @comments, count: count %>
  </tbody>
</table>

<!-- Create comments with partial comments/form --> 
<h3>Add a comment:</h3>
<%= render "comments/form" %>

<p>
  <%= link_to 'Back to Posts', posts_path %> | <%= link_to 'Edit This Post', edit_post_path(@post) %>
</p>
